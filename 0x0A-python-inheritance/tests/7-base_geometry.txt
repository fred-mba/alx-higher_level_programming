>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0
>>> bg.integer_validator("age", 7.4)
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", [6])
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("distance", None)
Traceback (most recent call last):
...
TypeError: distance must be an integer
>>> bg.integer_validator("name", {3,4})
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("distance", (3,))
Traceback (most recent call last):
...
TypeError: distance must be an integer
>>> bg.integer_validator("name", "3")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
...
TypeError: bool must be an integer
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
